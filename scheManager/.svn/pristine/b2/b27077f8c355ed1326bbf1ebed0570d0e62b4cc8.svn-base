<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<script>
var oldItemCode;
var oldItemName;

$(function () {

	// 페이징 컴포넌트 추가
	Vue.component('page-component', {
		template	: '<ul class="pagination mgn0">{{pagetag}}</ul>',
		props		: ['pagetag']
	});
	
	// 목록 Handler
	var itemApp = new Vue({
		el		: '#itemApp',
		data 	: paging.getData(),
		methods : {
			
			// 목록 호출
			list	: function () {
				
				var startCount = (this.page * this.limit - this.limit);

				var startDate = $("input[name='daterangepicker_start']").val();
				var endDate   = $("input[name='daterangepicker_end']").val();
				
				if ( startDate > endDate ){
					
					alert("기간을 확인하세요.");
					$("input[name='daterangepicker_start']").focus();
					
					return false;
					
				}
				
				var params = new URLSearchParams();
				params.append('page', 				startCount);
				params.append('limit', 				this.limit);
				params.append('searchKeyword', 		$('#searchKeyword').val());
				params.append('searchCodeType', 	$('#searchCodeType').val());
				params.append('searchSelectType', 	$('#searchSelectType').val());
				params.append('searchDateType', 	$('#searchDateType').val());
				params.append('searchStartDate', 	converter.string.replaceAll(startDate, "/", ""));
				params.append('searchEndDate',   	converter.string.replaceAll(endDate, "/", ""));
				
				// [필수설정]
				axios.defaults.headers.common['X-CSRF-TOKEN'] = '${_csrf.token}';
				// Promise
				axios.post('/houseHoldItem/list', params).then(response => {
					
					if (response.status == 200) {
						
						var totalCount 		= response.data.totalcount;			// 조회된 전체 카운트
						var dataList   		= response.data.list;				// 목록
						var reverseCount 	= (this.page - 1) * this.limit;		// row 역순 번호 구하기 위한 값
						
						$.each(dataList, function (i) {
							
							// 생성일
							this.createDate = converter.date.dateTime.toString(this.createDate, '-');
							
							// 품목유형
							var itemType = '';
							if (this.itemType == 'E') 
								itemType = '지출';
							else if (this.itemType == 'R') 
								itemType = '수익';
							
							this.itemType = itemType; 
							
							this['rowNo'] = ++startCount;						// row 번호
							this['revNo'] = totalCount - (reverseCount + i);	// row 역순 번호
						});
						
						itemApp.dataList = dataList;
						
						paging.init(totalCount, this);
						
						// 카운팅 정보
						$('#totalcount').text(totalCount);

						if (dataList.length > 0) {
							$('.empty').remove();
							$('#limitCount').text(dataList[0].rowNo + ' - ' + dataList[dataList.length - 1].rowNo);
							
						} else {
							paging.emptyList("#boardWrap",6);
							
						}
						
					} else {
						alert('목록 호출 실패');
					}
				});
			},
			
			// 상세정보 호출
			detail 	: function (itemIdx) {
				
				// 삭제 버튼 show
				$("#codeDeleteBtn").show();
				
				$('#codeAddTitle').text('코드 상세');
				
				param = new URLSearchParams();
				param.append('itemIdx', itemIdx);
				
				axios.defaults.headers.common['X-CSRF-TOKEN'] = '${_csrf.token}';
				axios.post('/houseHoldItem/detail', param).then(response => {
					if (response.status == 200) {
						
						var data = response.data.detail;
						oldItemName = data.itemName;
						oldItemCode = data.itemCode;

						$('#itemIdx').val(data.itemIdx);
						$('#itemName').val(oldItemName);
						$('#itemCode').val(oldItemCode);
						$('#itemType').val(data.itemType);
						
					} else {
						alert('상세 호출 실패');
					}
				});
			}
		
		}
	});

	// 목록 호출
	itemApp.list();
	
	// 등록 & 수정 & 삭제 Handler
	new Vue({
		el		: '#modalApp',
		methods : {
			save : function () {
				
				var csrfToken 	= '${_csrf.token}';
				var itemName 	= $('#itemName').val();
				var itemCode 	= $('#itemCode').val();

				// validation 체크할 항목 리스트
				var checkArray = [
					{ name : '품목명', 	tag : 'itemName', isEmpty : true },
					{ name : '품목코드', 	tag : 'itemCode', isEmpty : true, isKor : true }
				];
				
				var isValidation = validation.common(checkArray);
				
				if (isValidation) {
					return false;
				}
				
				// 품목명 중복확인
				if (!oldItemName || oldItemName != itemName) {
					var reqParam = {
						name	: '품목명',
						tag		: 'itemName',
						data	: {
							keywordType 				: 'name',
							keyword						: itemName,
							'${_csrf.parameterName}' 	: csrfToken
						}
					};
					isValidation = validation.overlap('/houseHoldItem/nameChk', reqParam);
					if (isValidation) {
						return false;
					}
				}
				
				// 품목코드 중복확인
				if (!oldItemCode || oldItemCode != itemCode) {
					reqParam = {
						name	: '품목코드',
						tag		: 'itemCode',
						data	: {
							keywordType 				: 'code',
							keyword						: itemCode,
							'${_csrf.parameterName}' 	: csrfToken
						}
					};
					isValidation = validation.overlap('/houseHoldItem/nameChk', reqParam);
					if (isValidation) {
						return false;
					}
				}

				var saveType = 'I';
				var saveText = '등록';
				var itemIdx = $('#itemIdx').val();
				if (itemIdx) {
					saveType 	= 'U';
					saveText 	= '수정';
				}
				
				param = new URLSearchParams();
				param.append('type'		, saveType);
				param.append('itemIdx'	, itemIdx);
				param.append('itemName'	, itemName);
				param.append('itemCode'	, itemCode);
				param.append('itemType'	, $('#itemType').val());
				
				// ajax 요청
				if (confirm(saveText + ' 하시겠습니까?')) {
					axios.defaults.headers.common['X-CSRF-TOKEN'] = csrfToken;
					axios.post('/houseHoldItem/merge', param).then(response => {
						if (response.status == 200) {
							// 알림 호출
							alert(saveText + '이 완료되었습니다.');
							// 목록 호출
							itemApp.list();
							// 팝업 닫기
							$('#codeCloseBtn').click();
							
						} else {
							alert(saveText + ' 실패하였습니다.');
						}
					});
				}
			},
			upd : function () {
				
			},
			del : function () {
				
				param = new URLSearchParams();
				param.append('type'		, 'D');
				param.append('itemIdx'	, $('#itemIdx').val());
				
				// ajax 요청
				if (confirm('삭제하시겠습니까?')) {
					axios.defaults.headers.common['X-CSRF-TOKEN'] = '${_csrf.token}';
					axios.post('/houseHoldItem/merge', param).then(response => {
						if (response.status == 200) {
							// 알림 호출
							alert('삭제가 완료되었습니다.');
							// 목록 호출
							itemApp.list();
							// 팝업 닫기
							$('#codeCloseBtn').click();
						}
					});
				}
				
			}
		}
	});
	
	eventValidation();
	
	// 코드 추가
	$('#codeAddBtn').unbind('click').click(function () {
		
		// 삭제 버튼 hide
		$("#codeDeleteBtn").hide();
		
		$('#codeAddTitle').text('코드 등록');
		
		itemIdx = '';
		$('#itemName').val('');
		$('#itemCode').val('');
		$('#itemType option:eq(0)').prop('selected', true);
	});
	
	// 검색 버튼 click event
	$("#btnSearch").unbind("click").click(function(){
		itemApp.list();
	});
});

function eventValidation () {
	
	var checkArray = [
		{ tag : 'itemName', isLength : true, leng : 10 }
	];
	
	validation.eventCheck(checkArray);
}

</script>


<!-- search start-->
<div class="row pdt20">
	<div class="col-md-12">
		<div class="content-panel pdt0 pdb0">
			<div class="weather-2-header panel-header">
				<div class="row">
					<div class="col-sm-6 col-xs-6">
						<p><i class="fa fa-search"></i>&nbsp;검색</p>
					</div>
				</div>
			</div>
			<table class="table mgnb0">
				<colgroup>
					<col style="width: 10%" />
					<col style="width: 40%" />
					<col style="width: 10%" />
					<col style="width: 40%" />
				</colgroup>
				<tr>
					<td class="border-top0 lineHeight20"><strong>품목명</strong></td>
					<td class="border-top0 lineHeight20">
						<div class="col-md-6 pdl0">
							<input type="text" class="form-control col-md-6" id="searchKeyword">
						</div>
					</td>
					<td class="border-top0 lineHeight20"><strong>품목유형</strong></td>
					<td class="border-top0">
						<div class="col-md-6 pdl0">
							<select class="form-control" id="searchSelectType">
								<option value="">전체</option>
								<option value="E">지출</option>
								<option value="R">수익</option>
							</select>
						</div>
					</td>
				</tr>
				<tr>
					<td class="lineHeight20"><strong>품목코드</strong></td>
					<td class="lineHeight20">
						<div class="col-md-6 pdl0">
							<input type="text" class="form-control col-md-6" id="searchCodeType">
						</div>
					</td>
					<td class="lineHeight20"><strong>기간</strong></td>
					<td>
						<div class="pdl0">
							<select class="form-control fl" id="searchDateType">
								<option value="createDate">생성일</option>
								<option value="updateDate">수정일</option>
							</select>
							<div class="input-group input-large fl input-group-date" data-date="01/01/2014" data-date-format="yyyy/mm/dd">
								<input type="text" class="form-control dpd1" name="daterangepicker_start">
								<span class="input-group-addon">To</span>
								<input type="text" class="form-control dpd2" name="daterangepicker_end">
							</div>
						</div>
					</td>
				</tr>
			</table>
		</div>
	</div>
</div>

<div class="tr mgnt20 mgnb20">
	<button type="button" class="btn btn-outline-success btn-md" id="btnSearch">검색</button>
	<button type="button" class="btn btn-outline-primary btn-md" id="codeAddBtn" data-toggle="modal" data-target="#codeAddModal">등록</button>
</div>
<!-- search end -->

<div>
	<div class="mgnb10 mgnt20">
		<div class="fl mgnt15">
			<span>전체 : </span><strong class="totalcount" id="totalcount">0</strong> 건 중 <strong id="limitCount">0 - 0</strong>
		</div>
		<select class="form-control display_ib width100 fr mgnb10">
			<option value="10">10</option>
			<option value="20">20</option>
			<option value="30">30</option>
		</select>
		<select class="form-control display_ib width130 fr mgnb10 mgnr10" id="sort">
			<option value="desc">최신순</option>
			<option value="asc">오래된순</option>
		</select>
	</div>
</div>

<div class="row" id="itemApp">
	<div class="col-md-12">
		<div class="content-panel pdt0 pdb0">
			<div class="weather-2-header panel-header">
				<div class="row">
					<div class="col-sm-6 col-xs-6">
						<p><i class="fa fa-list"></i>&nbsp;목록</p>
					</div>
				</div>
			</div>
			<table class="table table-striped table-advance table-hover">
				<thead class="font13">
					<tr>
						<th>번호</th>
						<th>품목명</th>
						<th>품목코드</th>
						<th>품목유형</th>
						<th>생성자</th>
						<th>생성일</th>
					</tr>
				</thead>	
				<tbody>
					<tr v-for="(item, index) in dataList" v-on:click="detail(item.itemIdx)" data-toggle="modal" data-target="#codeAddModal" v-cloak>
						<td class="tc">{{ item.revNo 			}}</td>
						<td class="tc">{{ item.itemName			}}</td>
						<td class="tc">{{ item.itemCode			}}</td>
						<td class="tc">{{ item.itemType			}}</td>
						<td class="tc">{{ item.createMemberName	}}</td>
						<td class="tc">{{ item.createDate		}}</td>
					</tr>
				</tbody>		
			</table>
		</div>
		
		<!-- Pagination START -->
		<nav class="tr">
			<page-component v-html:pagetag="pageTag"></page-component>
		</nav>
		<!-- Pagination END -->
		
	</div>
</div>

<div id="modalApp">

	<!-- 등록 modal -->
	<div class="modal fade" id="codeAddModal" tabindex="-1" role="dialog" aria-labelledby="codeAddModalLabel" aria-hidden="true">
		<div class="modal-dialog width350">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	                <h4 class="modal-title" id="codeAddTitle">코드 등록</h4>
				</div>
				<div class="modal-body pdb0">
					<table class="table mgnb0">
						<tbody>
							<tr>
								<th class="tl"><span class="font-red">*</span> 품목명</th>
								<td>
									<input type="text" class="form-control form-control-inline input-medium" id="itemName"/>
									<input type="hidden" id="itemIdx"/>
								</td>
							</tr>
							<tr>
								<th class="tl"><span class="font-red">*</span> 품목 코드</th>
								<td><input type="text" class="form-control form-control-inline input-medium" id="itemCode"/></td>
							</tr>
							<tr>
								<th class="tl"><span class="font-red">*</span> 품목 유형</th>
								<td>
									<select class="form-control" id="itemType">
										<option value="R">수익</option>
										<option value="E">지출</option>
									</select>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" id="codeCloseBtn" data-dismiss="modal">닫기</button>
					<button type="button" class="btn btn-primary" id="codeDeleteBtn"  v-on:click="del()">삭제</button>
					<button type="button" class="btn btn-primary" id="codeInsertBtn"  v-on:click="save()">저장</button>
				</div>
			</div>
		</div>
	</div>
	
</div>

<script>
</script>