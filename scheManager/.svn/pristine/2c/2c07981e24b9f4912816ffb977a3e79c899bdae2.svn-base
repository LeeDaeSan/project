<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<script type="text/javascript">
	
var csrfToken = "${_csrf.token}";
axios.defaults.headers.common["X-CSRF-TOKEN"] = csrfToken;

var oldBoardName;

$(function (){

	//==============================================
	// 페이징 추가 순서
	
	// 1. 페이징 컴포넌트 추가
	/* 
		Vue.component('page-component', {
			template	: '<ul class="pagination mgn0">{{pagetag}}</ul>',
			props		: ['pagetag']
		});
	*/
	
	// 2. 페이징 html 추가
	/* 
		<nav class="tr">
			<page-component v-html:pagetag="pageTag"></page-component>
		</nav>
	*/
	
	// 3. vue data 셋팅
	// data : paging.getData(),
	
	// 4. 리스트 호출 후 init 설정
	/* 
		board.dataList = response.data.list;
		paging.init(response.data.totalcount, this);
	*/
	
	//==============================================
		
		
		
	// 페이징 컴포넌트 추가
	Vue.component('page-component', {
		template	: '<ul class="pagination mgn0">{{pagetag}}</ul>',
		props		: ['pagetag']
	});
	
	var board = new Vue({
		
		el : "#boardWrap",
	
		data : paging.getData(),
		
		methods : {
			
			// 리스트 호출
			list : function (){
				
				var startCount = (this.page * this.limit - this.limit);
				
				var param = new URLSearchParams();
				param.append('page', 	startCount);
				param.append('limit', 	this.limit);
				
				axios.post("/boardManager/list", param).then(response => {
					
					if ( response.status == 200 ){
						
						var totalCount = response.data.totalcount;
						var dataList = response.data.list;
						
						$.each(dataList, function (i, item){

							this.createDate = converter.date.dateTime.toString(this.createDate, '-');
							this.updateDate = converter.date.dateTime.toString(this.updateDate, '-');
							
							// 게시판 타입
							if ( item.boardType == "1" ){
								this.boardType = "일반게시판";
							} else if ( item.boardType == "2" ) {
								this.boardType = "공지사항";
							} else if ( item.boardType == "3" ){
								this.boardType = "파일게시판";
							} else {
								this.boardType = "기타게시판";
							}
							
							// 사용 여부
							if ( item.isUse == "Y" ){
								this.isUse = "사용";
							} else {
								this.isUse = "미사용";
								
							}

							this['rowNo'] = ++startCount;
						});
						
						board.dataList = dataList;
						
						paging.init(totalCount, this);

						// 카운팅 정보
						$('#totalcount').text(totalCount);
						$('#limitCount').text(dataList[0].rowNo + ' - ' + dataList[dataList.length - 1].rowNo);
						
					} else {
						alert("서버 에러");
					}
					
				});
				
			},
			
			// 상세
			detail : function ( boardIdx ){
				
				$("#btnDel").show();
				$("#boardIdx").val(boardIdx);
				$("#addTitle").text("게시판 상세");
				
				param = new URLSearchParams();
				param.append("boardManagerIdx", boardIdx);
				
				axios.post("/boardManager/detail", param).then(response => {
				
					if ( response.status == 200 ){
						
						var data = response.data.detail;
						oldBoardName = data.boardName;
						
						$("#boardName").val(oldBoardName);
						$("#boardType").val(data.boardType);
						
						$("input:radio[name='isUse'][value=" + data.isUse + "]").prop("checked", true);
						$("#remark").val(data.remark);
						
					} else {
						alert("호출 실패");
					}
					
				});
			},
			
		},
		
	});
	
	// 등록, 수정, 삭제 Handler
	new Vue({
		
		el		: "#modalApp",
		methods : {
			
			// 저장
			save : function ( delType ){
				
				var boardName = $("#boardName").val();
				
				// validation check
				var checkArray = [
					{ name : "게시판명",	tag : "boardName", isEmpty : true },
					{ name : "타입",		tag : "boardType", isEmpty : true },
					{ name : "비고",		tag : "remark",	   isEmpty : true },
				];
				
				var isValidation = validation.common(checkArray);
				
				if ( isValidation ){
					return false;
				}

				// 게시판명 중복확인
				if ( !oldBoardName || oldBoardName != boardName ){

					var reqParam = {
						
						name : "게시판명",
						tag  : "boardName",
						data : {
							keywordType : "name",
							keyword		: boardName,
							"${_csrf.parameterName}" : csrfToken
						}
							
					};

					isValidation = validation.overlap("/boardManager/nameChk", reqParam);

					if (isValidation){
						return false;
					}
					
				}
				
				var saveType = "I";
				var saveText = "등록";
				
				// boardIdx 가 있으면 수정
				var boardIdx = $("#boardIdx").val();
				if (boardIdx){
					saveType = "U";
					saveText = "수정";
				}
				
				// delType 이 있으면 삭제
				if ( delType ){
					
					if ( !boardIdx ){
						return false;
					}
					
					saveType = delType;
					saveText = "삭제";
				}
				
				params = new URLSearchParams();
				params.append("type", 		saveType);
				params.append("boardManagerIdx", boardIdx);
				params.append("boardName",  $("#boardName").val());
				params.append("boardType",  $("#boardType").val());
				params.append("remark",		$("#remark").val());
				params.append("isUse",		$("input[name='isUse']:checked").val());

				if ( confirm(saveText + " 하시겠습니까?") ){
					
					axios.post("/boardManager/merge", params).then(response => {
						
						if ( response.status == 200 ){
							
							alert(saveText + " 되었습니다.");
							board.list();
							$('#codeCloseBtn').click();
							
						} else {
							alert("서버 에러");
						}
						
					});

					
				} else {
					return false;
				}
				
			},
			
		},
		
	});
	
	board.list();
	
	// 게시판 추가
	$("#addBtn").unbind("click").click(function(){

		$("#btnDel").hide();
		$("#addTitle").text("게시판 등록");
		
		$("#boardIdx").val("");
		$("#boardName").val("");
		$("#boardType option:eq(0)").prop("selected", true);
		$("input[name='isUse'][value='Y']").prop("checked", true);
		$("#remark").val("");
		
	});

	
});

</script>

<!-- search start-->
<div class="row pdt20">
	<div class="col-md-12">
		<div class="content-panel pdt0 pdb0">
			<div class="weather-2-header panel-header">
				<div class="row">
					<div class="col-sm-6 col-xs-6"><p>검색</p></div>
				</div>
			</div>
			<table class="table mgnb0">
				<colgroup>
					<col style="width: 10%" />
					<col style="width: 40%" />
					<col style="width: 10%" />
					<col style="width: 40%" />
				</colgroup>
				<tr>
					<td class="border-top0 lineHeight34"><strong>게시판명</strong></td>
					<td class="border-top0 lineHeight34">
						<div class="col-md-6 pdl0">
							<input type="text" id=""class="form-control col-md-6"></td>
						</div>
					<td class="border-top0 lineHeight34"><strong>타입</strong></td>
					<td class="border-top0">
						<div class="col-md-6 pdl0">
							<select class="form-control" id="">
								<option value="1">일반게시판</option>
								<option value="2">공지사항</option>
								<option value="3">파일게시판</option>
								<option value="4">기타</option>
							</select>
						</div>
					</td>
				</tr>
				<tr>
					<td class="lineHeight34"><strong>사용여부</strong></td>
					<td class="lineHeight34">
						<div class="checks">
							<label class="mgnr10">
								<input type="radio" value="Y" class="" name="isUse" checked>
								 사용
							</label>
							<label>
								<input type="radio" value="N" name="isUse">
								 미사용
							</label>
						</div>					
					</td>
					<td class="lineHeight34"><strong>기간</strong></td>
					<td>
						<div class="col-md-6 pdl0">
							<div class="input-group input-large" data-date="01/01/2014" data-date-format="mm/dd/yyyy">
								<input type="text" class="form-control dpd1" name="from">
								<span class="input-group-addon">To</span>
								<input type="text" class="form-control dpd2" name="to">
							</div>
						</div>
					</td>
				</tr>
			</table>
		</div>
	</div>
</div>
<div class="tr mgnt20 mgnb20">
	<button type="button" class="btn btn-success btn-md">검색</button>
	<button type="button" class="btn btn-primary" id="addBtn" data-toggle="modal" data-target="#addModal">등록</button>
</div>
<!-- search end -->

<div>
	<div class="mgnb10 mgnt20">
		<div class="fl mgnt15">
		<span>전체 : </span><strong class="totalcount" id="totalcount">0</strong> 건 중 <strong id="limitCount">0 - 0</strong>
	</div>
		<select class="form-control display_ib width100 fr mgnb10">
			<option value="10">10</option>
			<option value="20">20</option>
			<option value="30">30</option>
		</select>
		<select class="form-control display_ib width100 fr mgnb10 mgnr10 ">
			<option value="10">최신순</option>
			<option value="20">오래된순</option>
		</select>
	</div>
	<div class="btn-panel fr">
		<!-- <button type="button" class="btn btn-primary" id="addBtn" data-toggle="modal" data-target="#addModal">등록</button> -->
	</div>
</div>

<div class="row" id="boardWrap">
	<div class="col-md-12">
		<div class="content-panel  pdt0 pdb0">
			<div class="weather-2-header panel-header">
				<div class="row">
					<div class="col-sm-6 col-xs-6"><p>목록</p></div>
				</div>
			</div>
			<table class="table table-striped table-advance table-hover">
				<thead class="font13">
					<tr>
						<th>번호</th>
						<th>게시판명</th>
						<th>타입</th>
						<th>사용여부</th>
						<th>생성일</th>
						<th>수정일</th>
					</tr>
				</thead>	
				<tbody>
					<tr v-for="(item, index) in dataList" @click="detail(item.boardManagerIdx)" data-toggle="modal" data-target="#addModal">
						<td class="tc">{{ item.rowNo 		}}</td>
						<td class="tl">{{ item.boardName	}}</td>
						<td class="tc">{{ item.boardType	}}</td>
						<td class="tc">{{ item.isUse		}}</td>
						<td class="tc">{{ item.createDate	}}</td>
						<td class="tc">{{ item.updateDate	}}</td>
					</tr>
				</tbody>
			</table>
		</div>
		
		<!-- Pagination START -->
		<nav class="tr">
			<page-component v-html:pagetag="pageTag"></page-component>
		</nav>
		<!-- Pagination END -->
	</div>
</div>


<!-- 등록 modal -->
<div id="modalApp">
	<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="codeAddModalLabel" aria-hidden="true">
		<div class="modal-dialog width350">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	                <h4 class="modal-title" id="addTitle">게시판 등록</h4>
				</div>
				<div class="modal-body pdb0">
					<table class="table mgnb0">
						<tbody>
							<tr>
								<th class="tl vertical-md"><span class="font-red">*</span> 게시판명</th>
								<td>
									<input type="text" id="boardName"class="form-control form-control-inline input-medium">
									<input type="hidden" id="boardIdx"/>
								</td>
							</tr>
							<tr>
								<th class="tl vertical-md"><span class="font-red">*</span> 타입</th>
 								<td>
									<select class="form-control boardType" id="boardType">
										<option value="1">일반게시판</option>
										<option value="2">공지사항</option>
										<option value="3">파일게시판</option>
										<option value="4">기타</option>
									</select>
								</td>
							</tr>
							<tr>
								<th class="tl vertical-md"><span class="font-red">*</span> 사용 여부</th>
								<td>
									<div class="checks">
										<label class="mgnr10">
											<input type="radio" value="Y" class="" name="isUse" checked>
											 사용
										</label>
										<label>
											<input type="radio" value="N" name="isUse">
											 미사용
										</label>
									</div>
								</td>
							</tr>
							<tr>
								<th class="tl vertical-md"><span class="font-red">*</span> 비고</th>
								<td>
									<textarea class="form-control" id="remark"></textarea>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" id="codeCloseBtn" data-dismiss="modal">닫기</button>
					<button type="button" class="btn btn-primary" id="btnDel" @click="save('D')">삭제</button>
					<button type="button" class="btn btn-primary" @click="save()">저장</button>
				</div>
			</div>
		</div>
	</div>
</div>