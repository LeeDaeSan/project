<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<script>
$(function () {

	// 목록 Handler
	var itemApp = new Vue({
		el	: '#itemApp',
		mounted () {
			
			var param = {
					
			};
			
			// [필수설정]
			axios.defaults.headers.common['X-CSRF-TOKEN'] = '${_csrf.token}';
			// Promise
			axios.post('/houseHoldItem/list', param).then(response => {
				if (response.status == 200) {
					$.each(response.data, function () {
						this.createDate = converter.date.dateTime.toString(new Date(this.createDate), '-');
					});
					
					this.itemList = response.data;
				}
			});
		},
		data () {
			return {
				itemList : [],
			}	
		}
	});

	// 등록 & 수정 & 삭제 Handler
	new Vue({
		el		: '#modalApp',
		methods : {
			add : function () {
				
				var csrfToken 	= '${_csrf.token}';
				var itemName 	= $('#itemName').val();
				var itemCode 	= $('#itemCode').val();

				// validation 체크할 항목 리스트
				var checkArray = [
					{ name : '품목명', tag : 'itemName', isEmpty : true }
				];
				
				var isValidation = validation.common(checkArray);
				
				if (isValidation) {
					return false;
				}
				
				// 품목명 중복확인
				var reqParam = {
					name	: '품목명',
					tag		: 'itemName',
					data	: {
						keywordType 				: 'name',
						keyword						: itemName,
						'${_csrf.parameterName}' 	: csrfToken
					}
				};
				isValidation = validation.overlap('/houseHoldItem/nameChk', reqParam);
				if (isValidation) {
					return false;
				}
				
				// 품목코드 중복확인
				reqParam = {
					name	: '품목코드',
					tag		: 'itemCode',
					data	: {
						keywordType 				: 'code',
						keyword						: itemCode,
						'${_csrf.parameterName}' 	: csrfToken
					}
				};
				isValidation = validation.overlap('/houseHoldItem/nameChk', reqParam);
				if (isValidation) {
					return false;
				}

				return false;
				
				param = new URLSearchParams();
				param.append('type'		, 'I');
				param.append('itemName'	, itemName);
				param.append('itemCode'	, itemCode);
				param.append('itemType'	, $('#itemType').val());
				
				// ajax 요청
				axios.defaults.headers.common['X-CSRF-TOKEN'] = csrfToken;
				axios.post('/houseHoldItem/merge', param).then(response => {
					if (response.status == 200) {
						console.log(response);
					}
				});
			},
			upd : function () {
				
			},
			del : function () {
				
			}
		}
	});
	
	eventValidation();
});

function eventValidation () {
	
	var checkArray = [
		{ tag : 'itemName', isKor : true, isLength : true, leng : 10 }
	];
	
	validation.eventCheck(checkArray);
}

</script>

<div>
	<h3 class="fl">코드 관리</h3>

	<div class="btn-panel fr">
		<button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#codeAddModal">코드 등록</button>
	</div>
</div>

<div class="row" id="itemApp">
	<div class="col-md-12">
		<div class="content-panel">
			<table class="table table-striped table-advance table-hover">
				<thead>
					<tr>
						<th class="tc">번호</th>
						<th class="tc">품목명</th>
						<th class="tc">품목코드</th>
						<th class="tc">품목유형</th>
						<th class="tc">생성자</th>
						<th class="tc">생성일</th>
					</tr>
				</thead>	
				<tbody>
					<tr v-for="(item, index) in itemList">
						<td class="tc">{{ (index + 1) 			}}</td>
						<td class="tl">{{ item.itemName			}}</td>
						<td class="tl">{{ item.itemCode			}}</td>
						<td class="tl">{{ item.itemType			}}</td>
						<td class="tc">{{ item.createMemberIdx	}}</td>
						<td class="tc">{{ item.createDate		}}</td>
					</tr>
				</tbody>		
			</table>
		</div>
	</div>
</div>

<div id="modalApp">

	<!-- 등록 modal -->
	<div class="modal fade" id="codeAddModal" tabindex="-1" role="dialog" aria-labelledby="codeAddModalLabel" aria-hidden="true">
		<div class="modal-dialog" style="width:350px;">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	                <h4 class="modal-title" id="codeAddModal">코드 등록</h4>
				</div>
				<div class="modal-body">
					<table class="table">
						<tbody>
							<tr>
								<th>품목명</th>
								<td><input type="text" id="itemName"/></td>
							</tr>
							<tr>
								<th>품목 코드</th>
								<td><input type="text" id="itemCode"/></td>
							</tr>
							<tr>
								<th>품목 유형</th>
								<td>
									<select id="itemType">
										<option value="R">수익</option>
										<option value="E">지출</option>
									</select>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-sm btn-default" data-dismiss="modal">닫기</button>
					<button type="button" class="btn btn-sm btn-primary" id="codeAddBtn" v-on:click="add()">저장</button>
				</div>
			</div>
		</div>
	</div>
	
</div>

<script>
</script>